openapi: 3.1.0
info:
  title: Barberson API
  description: API endpoints
  version: 1.0.0
servers:
  - url: 'https://barberson.local/'
    description: Local server
  - url: 'https://barberson.vymozete.sk/'
    description: Test server
#security:
#  - bearerAuth: []
paths:
  /api/v1/comments:
    post:
      summary: Create comment
      tags:
        - private
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [rating, providerId]
              properties:
                message:
                  type: string
                  nullable: true
                rating:
                  type: integer
                providerId:
                  type: integer
      responses:
        201:
          description: Comment was successfully created
        401:
          description: Unauthorised access

  /api/v1/services:
    post:
      summary: Create service
      tags:
        - private
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, price, duration, providerId ]
              properties:
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                price:
                  type: integer
                duration:
                  type: integer
                providerId:
                  type: integer
      responses:
        201:
          description: Service was successfully created
        401:
          description: Unauthorised access

  /api/v1/orders:
    get:
      summary: Get list of orders
      tags:
        - private
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required: [ id, name, date, totalPrice, status ]
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        date:
                          type: string
                          format: date
                        totalPrice:
                          type: number
                          format: float
                        status:
#                            enum
                          type: string
                        paymentType:
                          type: string
                        location:
                          type: string
        401:
          description: Unauthorised access
    post:
      summary: Create order
      tags:
        - private
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, date, price, status, paymentType, providerId, customerAddress, selectedServices]
              properties:
                name:
                  type: string
                date:
                  type: string
                  format: date
                time:
                  type: string
                  pattern: '^\d{2}:\d{2}$'
                price:
                  type: number
                  format: float
                #promoCode:
                 # type: string
                status:
                  type: string
                paymentType:
                  type: string
                providerId:
                  type: integer
                customerAddress:
                  type: string
                selectedServices:
                  type: array
                  items:
                    type: object
                    required: [ id, title, price ]
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      price:
                        type: number
                        format: float
      responses:
        201:
          description: Order was successfully created
        401:
          description: Unauthorised access

  /api/v1/orders/{orderId}:
    get:
      summary: Get order detail
      parameters:
        - $ref: '#/components/parameters/OrderId'
      tags:
        - private
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [ id, name, date, totalPrice, status, selectedServices ]
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  date:
                    type: string
                    format: date
                  totalPrice:
                    type: number
                    format: float
                  status:
                    #                            enum
                    type: string
                  selectedServices:
                    type: array
                    items:
                      type: object
                      required: [ id, name, price ]
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                          format: float
                  paymentType:
                    type: string
                  location:
                    type: string
        401:
          description: Unauthorised access

  /api/auth/login:
    post:
      summary: User log-in
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ email, password ]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        201:
          description: User logged in successfully
        401:
          description: Unauthorised access

  /api/auth/register:
    post:
      summary: User registration
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, password ]
              properties:
                name:
                  type: string
                surname:
                  type: string
                birthdate:
                  type: string
                  format: date
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
      responses:
        201:
          description: User registered successfully
        401:
          description: Unauthorised access

  /api/auth/logout:
    get:
      summary: User log-out
      tags:
        - auth
      responses:
        200:
          description: User logged out successfully
        401:
          description: Unauthorised access

  /api/v1/customers:
    get:
      summary: Get list of customers
      tags:
        - public
      responses:
        200:
          description: OK
          #            todo validacia response
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        surname:
                          type: string
                        birthdate:
                          type: string
                          format: date
                        email:
                          type: string
                          format: email
                        phone:
                          type: string
                          nullable: true
                        state:
                          type: string
                        photo:
                          type: string
                          format: uri
                          nullable: true
        401:
          description: Unauthorised access

  /api/v1/customers/profile:
    put:
      summary: Edit customer profile
      tags:
        - private
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, surname, birthdate, email ]
              properties:
                name:
                  type: string
                surname:
                  type: string
                birthdate:
                  type: string
                  format: date
                email:
                  type: string
                  format: email
                phone:
                  type: string
                  nullable: true
                photo:
                  type: string
                  format: uri
                  nullable: true
      responses:
        200:
          description: Profile updated successfully
        400:
          description: Bad request
    get:
      summary: Get customer profile
      tags:
        - private
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: OK
          #            todo validacia response
          content:
            application/json:
              schema:
                type: object
                required: [ name, surname, birthdate, email, state ]
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  surname:
                    type: string
                  birthdate:
                    type: string
                    format: date
                  email:
                    type: string
                    format: email
                  phone:
                    type: string
                    nullable: true
                  state:
                    type: string
                  photo:
                    type: string
                    format: uri
                    nullable: true
        401:
          description: Unauthorised access

  /api/v1/providers:
    get:
      summary: Get list of providers
      tags:
        - public
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        ico:
                          type: string
                        vat:
                          type: string
                        iban:
                          type: string
                        description:
                          type: string
        401:
          description: Unauthorised access

  /api/v1/providers/{providerId}:
    get:
      summary: Get provider detail
      parameters:
        - $ref: '#/components/parameters/ProviderId'
      tags:
        - public
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [ id, name, surname, description ]
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  surname:
                    type: string
                  description:
                    type: string
        401:
          description: Unauthorised access

  /api/v1/providers/{providerId}/comments:
    get:
      summary: Get list of comments by provider ID
      parameters:
        - $ref: '#/components/parameters/ProviderId'
      tags:
        - public
      responses:
        200:
          description: OK
          #            todo validacia response
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required: [ id, rating, customerId, authorName, providerId, createdAt ]
                      properties:
                        id:
                          type: integer
                        message:
                          type: string
                          nullable: true
                        rating:
                          type: integer
                        customerId:
                          type: integer
                        authorName:
                          type: string
                        src:
                          type: string
                          format: uri
                          nullable: true
                        providerId:
                          type: integer
                        createdAt:
                          type: string
                          format: date-time
        401:
          description: Unauthorised access

  /api/v1/providers/{providerId}/services:
    get:
      summary: List of services by provider ID
      parameters:
        - $ref: '#/components/parameters/ProviderId'
      tags:
        - public
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [ data ]
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required: [ id, name, description, price, duration, providerId ]
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                          nullable: true
                        price:
                          type: number
                          format: float
                        duration:
                          type: integer
                        providerId:
                          type: integer
        401:
          description: Unauthorised access

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    Error:
      required:
        - statusCode
        - name
        - description
      properties:
        statusCode:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        payload:
          type: object
          nullable: true
          additionalProperties: true
      additionalProperties: true

  parameters:
    CustomerId:
      name: customerId
      in: path
      description: customer id
      required: true
      schema:
        type: string
        format: integer
        example: 1
    ProviderId:
      name: providerId
      in: path
      description: provider id
      required: true
      schema:
        type: string
        format: integer
        example: 1
    OrderId:
      name: orderId
      in: path
      description: order id
      required: true
      schema:
        type: string
        format: integer
        example: 1

  responses:
    UnexpectedErrorResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
